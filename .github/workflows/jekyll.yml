name: Deploy GitHub Pages with Jekyll and Nitdefgai

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true
          cache-version: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Load Wiki Submodules
        run: git submodule update --init --recursive
      - name: Copy GitHub Copilot Instructions
        run: |
          cp ./.github/copilot-instructions.md ./docs/copilot-instructions.md
          ls -al ./docs/
          head ./docs/copilot-instructions.md
      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
          JEKYLL_GITHUB_TOKEN: ${{ github.token }}
          PAGES_REPO_NWO: ${{ github.repository }}
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v4
  report-build-status:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Report Build Status
        run: |
          gh api -X POST "repos/$GITHUB_REPOSITORY/pages/telemetry" \
            -F github_run_id="$GITHUB_RUN_ID"                       \
            -F conclusion="$CONCLUSION"
        env:
          GH_TOKEN: ${{ github.token }}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
